{
  "version": 4,
  "terraform_version": "1.10.1",
  "serial": 682,
  "lineage": "57ba8562-ad8d-259a-8f90-459c12b661df",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: grafana\ndata:\n  grafana.ini: |\n    [analytics]\n    reporting_enabled = false\n    check_for_updates = true\n\n    [grafana_net]\n    url = https://grafana.net\n\n    [log]\n    mode = console\n\n    [paths]\n    data = /var/lib/grafana/data\n    logs = /var/log/grafana\n    plugins = /var/lib/grafana/plugins\n    provisioning = /etc/grafana/provisioning\n\n    [server]\n    root_url = \"https://my-grafana.example.pvt\"\n\n    [auth.anonymous]\n    enabled = false\n\n    [metrics]\n    enabled = false\n    disable_total_stats = true",
              "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: dashboards\ndata:\n  dashboardproviders.yaml: |-\n    apiVersion: 1\n    providers:\n    - disableDeletion: false\n      editable: false\n      folder: Kubernetes\n      name: kubernetes\n      options:\n        path: /var/lib/grafana/dashboards/kubernetes\n      orgId: 1\n      type: file",
              "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: datasources\n  namespace: monitoring\ndata:\n  datasources.yaml: |\n    apiVersion: 1\n    datasources:\n    - name: Main\n      type: prometheus\n      url: http://prometheus-operated.monitoring:9090\n      isDefault: false\n      jsonData:\n        manageAlerts: false",
              "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      securityContext:\n        fsGroup: 472\n        runAsUser: 472\n      containers:\n        - name: grafana\n          image: grafana/grafana:10.0.3\n          imagePullPolicy: IfNotPresent\n          volumeMounts:\n            - name: config\n              mountPath: \"/etc/grafana/grafana.ini\"\n              subPath: grafana.ini\n            - name: datasources\n              mountPath: \"/etc/grafana/provisioning/datasources/datasources.yaml\"\n              subPath: datasources.yaml\n            - name: dashboards\n              mountPath: \"/etc/grafana/provisioning/dashboards/dashboardproviders.yaml\"\n              subPath: dashboardproviders.yaml\n          ports:\n            - name: grafana\n              containerPort: 3000\n              protocol: TCP\n          env:\n            - name: GF_SECURITY_ADMIN_USER\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-user\n            - name: GF_SECURITY_ADMIN_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-password\n          livenessProbe:\n            failureThreshold: 10\n            httpGet:\n              path: /api/health\n              port: 3000\n            initialDelaySeconds: 60\n            timeoutSeconds: 30\n          readinessProbe:\n            httpGet:\n              path: /api/health\n              port: 3000\n          resources:\n            requests:\n              cpu: 500m\n              memory: 1Gi\n            limits:\n              cpu: 2000m\n              memory: 4Gi\n      volumes:\n        - name: config\n          configMap:\n            name: grafana\n        - name: datasources\n          configMap:\n            name: datasources\n        - name: dashboards\n          configMap:\n            name: dashboards",
              "---\napiVersion: v1\nkind: Secret\nmetadata:\n  namespace: monitoring\n  name: grafana\ntype: Opaque\ndata:\n  admin-user: \"YWRtaW4=\"\n  admin-password: \"ZGV2b3BzMTIz\"",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  type: LoadBalancer\n  ports:\n    - name: service\n      port: 80\n      targetPort: grafana\n      protocol: TCP\n  selector:\n    app: grafana"
            ],
            "id": "16a4dd254694a71d1a1fdb5fdf87d72955a262c88b0c1d3ef708fcddd551477c",
            "manifests": {
              "/api/v1/namespaces/monitoring/configmaps/dashboards": "apiVersion: v1\ndata:\n  dashboardproviders.yaml: |-\n    apiVersion: 1\n    providers:\n    - disableDeletion: false\n      editable: false\n      folder: Kubernetes\n      name: kubernetes\n      options:\n        path: /var/lib/grafana/dashboards/kubernetes\n      orgId: 1\n      type: file\nkind: ConfigMap\nmetadata:\n  name: dashboards\n  namespace: monitoring\n",
              "/api/v1/namespaces/monitoring/configmaps/datasources": "apiVersion: v1\ndata:\n  datasources.yaml: |-\n    apiVersion: 1\n    datasources:\n    - name: Main\n      type: prometheus\n      url: http://prometheus-operated.monitoring:9090\n      isDefault: false\n      jsonData:\n        manageAlerts: false\nkind: ConfigMap\nmetadata:\n  name: datasources\n  namespace: monitoring\n",
              "/api/v1/namespaces/monitoring/configmaps/grafana": "apiVersion: v1\ndata:\n  grafana.ini: |-\n    [analytics]\n    reporting_enabled = false\n    check_for_updates = true\n\n    [grafana_net]\n    url = https://grafana.net\n\n    [log]\n    mode = console\n\n    [paths]\n    data = /var/lib/grafana/data\n    logs = /var/log/grafana\n    plugins = /var/lib/grafana/plugins\n    provisioning = /etc/grafana/provisioning\n\n    [server]\n    root_url = \"https://my-grafana.example.pvt\"\n\n    [auth.anonymous]\n    enabled = false\n\n    [metrics]\n    enabled = false\n    disable_total_stats = true\nkind: ConfigMap\nmetadata:\n  name: grafana\n  namespace: monitoring\n",
              "/api/v1/namespaces/monitoring/secrets/grafana": "apiVersion: v1\ndata:\n  admin-password: ZGV2b3BzMTIz\n  admin-user: YWRtaW4=\nkind: Secret\nmetadata:\n  name: grafana\n  namespace: monitoring\ntype: Opaque\n",
              "/api/v1/namespaces/monitoring/services/grafana": "apiVersion: v1\nkind: Service\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  ports:\n  - name: service\n    port: 80\n    protocol: TCP\n    targetPort: grafana\n  selector:\n    app: grafana\n  type: LoadBalancer\n",
              "/apis/apps/v1/namespaces/monitoring/deployments/grafana": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      containers:\n      - env:\n        - name: GF_SECURITY_ADMIN_USER\n          valueFrom:\n            secretKeyRef:\n              key: admin-user\n              name: grafana\n        - name: GF_SECURITY_ADMIN_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              key: admin-password\n              name: grafana\n        image: grafana/grafana:10.0.3\n        imagePullPolicy: IfNotPresent\n        livenessProbe:\n          failureThreshold: 10\n          httpGet:\n            path: /api/health\n            port: 3000\n          initialDelaySeconds: 60\n          timeoutSeconds: 30\n        name: grafana\n        ports:\n        - containerPort: 3000\n          name: grafana\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n        resources:\n          limits:\n            cpu: 2000m\n            memory: 4Gi\n          requests:\n            cpu: 500m\n            memory: 1Gi\n        volumeMounts:\n        - mountPath: /etc/grafana/grafana.ini\n          name: config\n          subPath: grafana.ini\n        - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml\n          name: datasources\n          subPath: datasources.yaml\n        - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml\n          name: dashboards\n          subPath: dashboardproviders.yaml\n      securityContext:\n        fsGroup: 472\n        runAsUser: 472\n      volumes:\n      - configMap:\n          name: grafana\n        name: config\n      - configMap:\n          name: datasources\n        name: datasources\n      - configMap:\n          name: dashboards\n        name: dashboards\n"
            },
            "pattern": "../monitoring/grafana/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "grafana_dashboards",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [],
            "id": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
            "manifests": {},
            "pattern": "../monitoring/grafana/dashboards/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus\n    namespace: monitoring",
              "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n      - nodes/metrics\n      - services\n      - endpoints\n      - pods\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources:\n      - configmaps\n    verbs: [\"get\"]\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs: [\"get\", \"list\", \"watch\"]\n  - nonResourceURLs: [\"/metrics\"]\n    verbs: [\"get\"]",
              "---\napiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: main\n  namespace: monitoring\nspec:\n  version: v2.46.0\n  serviceAccountName: prometheus\n  podMonitorSelector:\n    matchLabels:\n      prometheus: main\n  podMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      prometheus: main\n  serviceMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  replicas: 1\n  logLevel: info\n  logFormat: logfmt\n  retention: 7d\n  scrapeInterval: 5s\n  securityContext:\n    fsGroup: 0\n    runAsNonRoot: false\n    runAsUser: 0\n  # storage:\n  #   volumeClaimTemplate:\n  #     spec:\n  #       resources:\n  #         requests:\n  #           storage: 20Gi",
              "---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: monitoring",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  type: LoadBalancer\n  selector:\n    app.kubernetes.io/instance: main\n    app.kubernetes.io/managed-by: prometheus-operator\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: web"
            ],
            "id": "91cbc39a12bef1b411a0ae37cc90229602452939a83bc43faac808a2fa8670b6",
            "manifests": {
              "/api/v1/namespaces/monitoring/serviceaccounts/prometheus": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: monitoring\n",
              "/api/v1/namespaces/monitoring/services/prometheus": "apiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: web\n  selector:\n    app.kubernetes.io/instance: main\n    app.kubernetes.io/managed-by: prometheus-operator\n  type: LoadBalancer\n",
              "/apis/monitoring.coreos.com/v1/namespaces/monitoring/prometheuses/main": "apiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: main\n  namespace: monitoring\nspec:\n  logFormat: logfmt\n  logLevel: info\n  podMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  podMonitorSelector:\n    matchLabels:\n      prometheus: main\n  replicas: 1\n  retention: 7d\n  scrapeInterval: 5s\n  securityContext:\n    fsGroup: 0\n    runAsNonRoot: false\n    runAsUser: 0\n  serviceAccountName: prometheus\n  serviceMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      prometheus: main\n  version: v2.46.0\n",
              "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/prometheus": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n  namespace: monitoring\n",
              "/apis/rbac.authorization.k8s.io/v1/clusterroles/prometheus": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  - nodes/metrics\n  - services\n  - endpoints\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - get\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n"
            },
            "pattern": "../monitoring/prometheus/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "prometheus_operator",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [],
            "id": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",
            "manifests": {},
            "pattern": "../monitoring/prometheus-operator/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_vars"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "flagger",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "flagger",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "flagger",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.32.0",
                "chart": "flagger",
                "name": "flagger",
                "namespace": "flagger",
                "revision": 1,
                "values": "{\"crd\":{\"create\":false},\"meshProvider\":\"istio\",\"metricsServer\":\"http://prometheus-operated.monitoring:9090\"}",
                "version": "1.32.0"
              }
            ],
            "name": "flagger",
            "namespace": "flagger",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://flagger.app",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "crd.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "meshProvider",
                "type": "",
                "value": "istio"
              },
              {
                "name": "metricsServer",
                "type": "",
                "value": "http://prometheus-operated.monitoring:9090"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.32.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_base",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "base",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-base",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.24.1",
                "chart": "base",
                "name": "istio-base",
                "namespace": "istio-system",
                "revision": 1,
                "values": "{}",
                "version": "1.24.1"
              }
            ],
            "name": "istio-base",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.24.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istiod",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "istiod",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istiod",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.24.1",
                "chart": "istiod",
                "name": "istiod",
                "namespace": "istio-system",
                "revision": 1,
                "values": "{\"telemetry\":{\"enabled\":true}}",
                "version": "1.24.1"
              }
            ],
            "name": "istiod",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "telemetry.enabled",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.24.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "loadtester",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "loadtester",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "loadtester",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.28.1",
                "chart": "loadtester",
                "name": "loadtester",
                "namespace": "flagger",
                "revision": 1,
                "values": "{}",
                "version": "0.28.1"
              }
            ],
            "name": "loadtester",
            "namespace": "flagger",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://flagger.app",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.28.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus_operator_crds",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "prometheus-operator-crds",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus-operator-crds",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.67.0",
                "chart": "prometheus-operator-crds",
                "name": "prometheus-operator-crds",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{}",
                "version": "5.1.0"
              }
            ],
            "name": "prometheus-operator-crds",
            "namespace": "monitoring",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "5.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "grafana",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      securityContext:\n        fsGroup: 472\n        runAsUser: 472\n      containers:\n        - name: grafana\n          image: grafana/grafana:10.0.3\n          imagePullPolicy: IfNotPresent\n          volumeMounts:\n            - name: config\n              mountPath: \"/etc/grafana/grafana.ini\"\n              subPath: grafana.ini\n            - name: datasources\n              mountPath: \"/etc/grafana/provisioning/datasources/datasources.yaml\"\n              subPath: datasources.yaml\n            - name: dashboards\n              mountPath: \"/etc/grafana/provisioning/dashboards/dashboardproviders.yaml\"\n              subPath: dashboardproviders.yaml\n          ports:\n            - name: grafana\n              containerPort: 3000\n              protocol: TCP\n          env:\n            - name: GF_SECURITY_ADMIN_USER\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-user\n            - name: GF_SECURITY_ADMIN_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-password\n          livenessProbe:\n            failureThreshold: 10\n            httpGet:\n              path: /api/health\n              port: 3000\n            initialDelaySeconds: 60\n            timeoutSeconds: 30\n          readinessProbe:\n            httpGet:\n              path: /api/health\n              port: 3000\n          resources:\n            requests:\n              cpu: 500m\n              memory: 1Gi\n            limits:\n              cpu: 2000m\n              memory: 4Gi\n      volumes:\n        - name: config\n          configMap:\n            name: grafana\n        - name: datasources\n          configMap:\n            name: datasources\n        - name: dashboards\n          configMap:\n            name: dashboards",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/monitoring/deployments/grafana",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "23eef8e888688bc7518a69d809183fdef29e9493debfe3730aa42ee091d4f52e",
            "live_uid": "b8c5b1c4-ed55-4c5b-94ae-1dde7ab962a1",
            "name": "grafana",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "b8c5b1c4-ed55-4c5b-94ae-1dde7ab962a1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      securityContext:\n        fsGroup: 472\n        runAsUser: 472\n      containers:\n        - name: grafana\n          image: grafana/grafana:10.0.3\n          imagePullPolicy: IfNotPresent\n          volumeMounts:\n            - name: config\n              mountPath: \"/etc/grafana/grafana.ini\"\n              subPath: grafana.ini\n            - name: datasources\n              mountPath: \"/etc/grafana/provisioning/datasources/datasources.yaml\"\n              subPath: datasources.yaml\n            - name: dashboards\n              mountPath: \"/etc/grafana/provisioning/dashboards/dashboardproviders.yaml\"\n              subPath: dashboardproviders.yaml\n          ports:\n            - name: grafana\n              containerPort: 3000\n              protocol: TCP\n          env:\n            - name: GF_SECURITY_ADMIN_USER\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-user\n            - name: GF_SECURITY_ADMIN_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: grafana\n                  key: admin-password\n          livenessProbe:\n            failureThreshold: 10\n            httpGet:\n              path: /api/health\n              port: 3000\n            initialDelaySeconds: 60\n            timeoutSeconds: 30\n          readinessProbe:\n            httpGet:\n              path: /api/health\n              port: 3000\n          resources:\n            requests:\n              cpu: 500m\n              memory: 1Gi\n            limits:\n              cpu: 2000m\n              memory: 4Gi\n      volumes:\n        - name: config\n          configMap:\n            name: grafana\n        - name: datasources\n          configMap:\n            name: datasources\n        - name: dashboards\n          configMap:\n            name: dashboards",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: grafana\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: grafana\n    spec:\n      containers:\n      - env:\n        - name: GF_SECURITY_ADMIN_USER\n          valueFrom:\n            secretKeyRef:\n              key: admin-user\n              name: grafana\n        - name: GF_SECURITY_ADMIN_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              key: admin-password\n              name: grafana\n        image: grafana/grafana:10.0.3\n        imagePullPolicy: IfNotPresent\n        livenessProbe:\n          failureThreshold: 10\n          httpGet:\n            path: /api/health\n            port: 3000\n          initialDelaySeconds: 60\n          timeoutSeconds: 30\n        name: grafana\n        ports:\n        - containerPort: 3000\n          name: grafana\n          protocol: TCP\n        readinessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n        resources:\n          limits:\n            cpu: 2000m\n            memory: 4Gi\n          requests:\n            cpu: 500m\n            memory: 1Gi\n        volumeMounts:\n        - mountPath: /etc/grafana/grafana.ini\n          name: config\n          subPath: grafana.ini\n        - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml\n          name: datasources\n          subPath: datasources.yaml\n        - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml\n          name: dashboards\n          subPath: dashboardproviders.yaml\n      securityContext:\n        fsGroup: 472\n        runAsUser: 472\n      volumes:\n      - configMap:\n          name: grafana\n        name: config\n      - configMap:\n          name: datasources\n        name: datasources\n      - configMap:\n          name: dashboards\n        name: dashboards\n",
            "yaml_incluster": "23eef8e888688bc7518a69d809183fdef29e9493debfe3730aa42ee091d4f52e"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: datasources\n  namespace: monitoring\ndata:\n  datasources.yaml: |\n    apiVersion: 1\n    datasources:\n    - name: Main\n      type: prometheus\n      url: http://prometheus-operated.monitoring:9090\n      isDefault: false\n      jsonData:\n        manageAlerts: false",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/configmaps/datasources",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "3d2cc746fac134c128daa29f14e3b0b18e50bb94a1533ea77d0df26deb974d41",
            "live_uid": "f15c4d96-7063-4ed6-9a7f-b7aa1aed5d1e",
            "name": "datasources",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f15c4d96-7063-4ed6-9a7f-b7aa1aed5d1e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: datasources\n  namespace: monitoring\ndata:\n  datasources.yaml: |\n    apiVersion: 1\n    datasources:\n    - name: Main\n      type: prometheus\n      url: http://prometheus-operated.monitoring:9090\n      isDefault: false\n      jsonData:\n        manageAlerts: false",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  datasources.yaml: |-\n    apiVersion: 1\n    datasources:\n    - name: Main\n      type: prometheus\n      url: http://prometheus-operated.monitoring:9090\n      isDefault: false\n      jsonData:\n        manageAlerts: false\nkind: ConfigMap\nmetadata:\n  name: datasources\n  namespace: monitoring\n",
            "yaml_incluster": "3d2cc746fac134c128daa29f14e3b0b18e50bb94a1533ea77d0df26deb974d41"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: dashboards\ndata:\n  dashboardproviders.yaml: |-\n    apiVersion: 1\n    providers:\n    - disableDeletion: false\n      editable: false\n      folder: Kubernetes\n      name: kubernetes\n      options:\n        path: /var/lib/grafana/dashboards/kubernetes\n      orgId: 1\n      type: file",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/configmaps/dashboards",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "ad2c0e30d93161a4143e55578f4b5b01bcd4cf2e7c6900d1c98a47f4a8a24e68",
            "live_uid": "28c6e4a9-bbaf-4079-88e9-3ef0178cd586",
            "name": "dashboards",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "28c6e4a9-bbaf-4079-88e9-3ef0178cd586",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: dashboards\ndata:\n  dashboardproviders.yaml: |-\n    apiVersion: 1\n    providers:\n    - disableDeletion: false\n      editable: false\n      folder: Kubernetes\n      name: kubernetes\n      options:\n        path: /var/lib/grafana/dashboards/kubernetes\n      orgId: 1\n      type: file",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  dashboardproviders.yaml: |-\n    apiVersion: 1\n    providers:\n    - disableDeletion: false\n      editable: false\n      folder: Kubernetes\n      name: kubernetes\n      options:\n        path: /var/lib/grafana/dashboards/kubernetes\n      orgId: 1\n      type: file\nkind: ConfigMap\nmetadata:\n  name: dashboards\n  namespace: monitoring\n",
            "yaml_incluster": "ad2c0e30d93161a4143e55578f4b5b01bcd4cf2e7c6900d1c98a47f4a8a24e68"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: grafana\ndata:\n  grafana.ini: |\n    [analytics]\n    reporting_enabled = false\n    check_for_updates = true\n\n    [grafana_net]\n    url = https://grafana.net\n\n    [log]\n    mode = console\n\n    [paths]\n    data = /var/lib/grafana/data\n    logs = /var/log/grafana\n    plugins = /var/lib/grafana/plugins\n    provisioning = /etc/grafana/provisioning\n\n    [server]\n    root_url = \"https://my-grafana.example.pvt\"\n\n    [auth.anonymous]\n    enabled = false\n\n    [metrics]\n    enabled = false\n    disable_total_stats = true",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/configmaps/grafana",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "844a45422999105f966e7d284cfb92d761ccdc04de155a53e13397fb3074a794",
            "live_uid": "5747fb2d-61ed-46aa-8641-e96d0889b92c",
            "name": "grafana",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5747fb2d-61ed-46aa-8641-e96d0889b92c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: monitoring\n  name: grafana\ndata:\n  grafana.ini: |\n    [analytics]\n    reporting_enabled = false\n    check_for_updates = true\n\n    [grafana_net]\n    url = https://grafana.net\n\n    [log]\n    mode = console\n\n    [paths]\n    data = /var/lib/grafana/data\n    logs = /var/log/grafana\n    plugins = /var/lib/grafana/plugins\n    provisioning = /etc/grafana/provisioning\n\n    [server]\n    root_url = \"https://my-grafana.example.pvt\"\n\n    [auth.anonymous]\n    enabled = false\n\n    [metrics]\n    enabled = false\n    disable_total_stats = true",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  grafana.ini: |-\n    [analytics]\n    reporting_enabled = false\n    check_for_updates = true\n\n    [grafana_net]\n    url = https://grafana.net\n\n    [log]\n    mode = console\n\n    [paths]\n    data = /var/lib/grafana/data\n    logs = /var/log/grafana\n    plugins = /var/lib/grafana/plugins\n    provisioning = /etc/grafana/provisioning\n\n    [server]\n    root_url = \"https://my-grafana.example.pvt\"\n\n    [auth.anonymous]\n    enabled = false\n\n    [metrics]\n    enabled = false\n    disable_total_stats = true\nkind: ConfigMap\nmetadata:\n  name: grafana\n  namespace: monitoring\n",
            "yaml_incluster": "844a45422999105f966e7d284cfb92d761ccdc04de155a53e13397fb3074a794"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: Secret\nmetadata:\n  namespace: monitoring\n  name: grafana\ntype: Opaque\ndata:\n  admin-user: \"YWRtaW4=\"\n  admin-password: \"ZGV2b3BzMTIz\"",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/secrets/grafana",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "3ef7159db2384dc6618bb287c2bdeb986648df0fba1303c44950c9e387a9b1d3",
            "live_uid": "306f0389-d697-4443-8c7d-c4b3cd698452",
            "name": "grafana",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "306f0389-d697-4443-8c7d-c4b3cd698452",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Secret\nmetadata:\n  namespace: monitoring\n  name: grafana\ntype: Opaque\ndata:\n  admin-user: \"YWRtaW4=\"\n  admin-password: \"ZGV2b3BzMTIz\"",
            "yaml_body_parsed": "apiVersion: v1\ndata: (sensitive value)\nkind: Secret\nmetadata:\n  name: grafana\n  namespace: monitoring\ntype: Opaque\n",
            "yaml_incluster": "3ef7159db2384dc6618bb287c2bdeb986648df0fba1303c44950c9e387a9b1d3"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  type: LoadBalancer\n  ports:\n    - name: service\n      port: 80\n      targetPort: grafana\n      protocol: TCP\n  selector:\n    app: grafana",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/services/grafana",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "326a36851b065a505944058b5e76d4880f98b3be95e6c60586aa2681e9428ca5",
            "live_uid": "49ef849e-598a-4839-9545-fe79c51bcf75",
            "name": "grafana",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "49ef849e-598a-4839-9545-fe79c51bcf75",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  namespace: monitoring\n  name: grafana\nspec:\n  type: LoadBalancer\n  ports:\n    - name: service\n      port: 80\n      targetPort: grafana\n      protocol: TCP\n  selector:\n    app: grafana",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: grafana\n  namespace: monitoring\nspec:\n  ports:\n  - name: service\n    port: 80\n    protocol: TCP\n    targetPort: grafana\n  selector:\n    app: grafana\n  type: LoadBalancer\n",
            "yaml_incluster": "326a36851b065a505944058b5e76d4880f98b3be95e6c60586aa2681e9428ca5"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.grafana",
            "data.kubectl_path_documents.grafana_dashboards",
            "helm_release.prometheus_operator_crds",
            "kubectl_manifest.grafana_dashboards"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": "---\napiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: main\n  namespace: monitoring\nspec:\n  version: v2.46.0\n  serviceAccountName: prometheus\n  podMonitorSelector:\n    matchLabels:\n      prometheus: main\n  podMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      prometheus: main\n  serviceMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  replicas: 1\n  logLevel: info\n  logFormat: logfmt\n  retention: 7d\n  scrapeInterval: 5s\n  securityContext:\n    fsGroup: 0\n    runAsNonRoot: false\n    runAsUser: 0\n  # storage:\n  #   volumeClaimTemplate:\n  #     spec:\n  #       resources:\n  #         requests:\n  #           storage: 20Gi",
          "schema_version": 1,
          "attributes": {
            "api_version": "monitoring.coreos.com/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/monitoring.coreos.com/v1/namespaces/monitoring/prometheuses/main",
            "ignore_fields": null,
            "kind": "Prometheus",
            "live_manifest_incluster": "63caffdc39eef54d80f50521567a4d19ff4e8619be9bd98779394ec860551f2a",
            "live_uid": "1c17b72b-959b-4d9c-a4ca-5bb543cced9d",
            "name": "main",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1c17b72b-959b-4d9c-a4ca-5bb543cced9d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: main\n  namespace: monitoring\nspec:\n  version: v2.46.0\n  serviceAccountName: prometheus\n  podMonitorSelector:\n    matchLabels:\n      prometheus: main\n  podMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      prometheus: main\n  serviceMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  replicas: 1\n  logLevel: info\n  logFormat: logfmt\n  retention: 7d\n  scrapeInterval: 5s\n  securityContext:\n    fsGroup: 0\n    runAsNonRoot: false\n    runAsUser: 0\n  # storage:\n  #   volumeClaimTemplate:\n  #     spec:\n  #       resources:\n  #         requests:\n  #           storage: 20Gi",
            "yaml_body_parsed": "apiVersion: monitoring.coreos.com/v1\nkind: Prometheus\nmetadata:\n  name: main\n  namespace: monitoring\nspec:\n  logFormat: logfmt\n  logLevel: info\n  podMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  podMonitorSelector:\n    matchLabels:\n      prometheus: main\n  replicas: 1\n  retention: 7d\n  scrapeInterval: 5s\n  securityContext:\n    fsGroup: 0\n    runAsNonRoot: false\n    runAsUser: 0\n  serviceAccountName: prometheus\n  serviceMonitorNamespaceSelector:\n    matchLabels:\n      monitoring: prometheus\n  serviceMonitorSelector:\n    matchLabels:\n      prometheus: main\n  version: v2.46.0\n",
            "yaml_incluster": "63caffdc39eef54d80f50521567a4d19ff4e8619be9bd98779394ec860551f2a"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus",
            "helm_release.prometheus_operator_crds"
          ]
        },
        {
          "index_key": "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n      - nodes/metrics\n      - services\n      - endpoints\n      - pods\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources:\n      - configmaps\n    verbs: [\"get\"]\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs: [\"get\", \"list\", \"watch\"]\n  - nonResourceURLs: [\"/metrics\"]\n    verbs: [\"get\"]",
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/clusterroles/prometheus",
            "ignore_fields": null,
            "kind": "ClusterRole",
            "live_manifest_incluster": "24b7784f2df1a7f872140170225e936f0020a08976169f5c23e5feecd20082ad",
            "live_uid": "d59d2504-5354-4e84-a290-101cb808e7e0",
            "name": "prometheus",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d59d2504-5354-4e84-a290-101cb808e7e0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n  - apiGroups: [\"\"]\n    resources:\n      - nodes\n      - nodes/metrics\n      - services\n      - endpoints\n      - pods\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources:\n      - configmaps\n    verbs: [\"get\"]\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs: [\"get\", \"list\", \"watch\"]\n  - nonResourceURLs: [\"/metrics\"]\n    verbs: [\"get\"]",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: prometheus\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  - nodes/metrics\n  - services\n  - endpoints\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - configmaps\n  verbs:\n  - get\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  verbs:\n  - get\n  - list\n  - watch\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n",
            "yaml_incluster": "24b7784f2df1a7f872140170225e936f0020a08976169f5c23e5feecd20082ad"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus",
            "helm_release.prometheus_operator_crds"
          ]
        },
        {
          "index_key": "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus\n    namespace: monitoring",
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/clusterrolebindings/prometheus",
            "ignore_fields": null,
            "kind": "ClusterRoleBinding",
            "live_manifest_incluster": "7a060d6c797f0aafc9843e653dd9335b329c1ccfbde85f0b9dd13f13fbe1e9c4",
            "live_uid": "c7c9522b-799c-4717-810b-c958c5442be3",
            "name": "prometheus",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c7c9522b-799c-4717-810b-c958c5442be3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n  - kind: ServiceAccount\n    name: prometheus\n    namespace: monitoring",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: prometheus\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: prometheus\nsubjects:\n- kind: ServiceAccount\n  name: prometheus\n  namespace: monitoring\n",
            "yaml_incluster": "7a060d6c797f0aafc9843e653dd9335b329c1ccfbde85f0b9dd13f13fbe1e9c4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus",
            "helm_release.prometheus_operator_crds"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  type: LoadBalancer\n  selector:\n    app.kubernetes.io/instance: main\n    app.kubernetes.io/managed-by: prometheus-operator\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: web",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/services/prometheus",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "bc98ee2d23388a689fa2126acc17d7c9a65a073caa722b99ccbd4cc91e5d4ef9",
            "live_uid": "69f574f2-db37-4319-b86c-522471f10b0c",
            "name": "prometheus",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "69f574f2-db37-4319-b86c-522471f10b0c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  type: LoadBalancer\n  selector:\n    app.kubernetes.io/instance: main\n    app.kubernetes.io/managed-by: prometheus-operator\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: web",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: prometheus\n  namespace: monitoring\nspec:\n  ports:\n  - port: 80\n    protocol: TCP\n    targetPort: web\n  selector:\n    app.kubernetes.io/instance: main\n    app.kubernetes.io/managed-by: prometheus-operator\n  type: LoadBalancer\n",
            "yaml_incluster": "bc98ee2d23388a689fa2126acc17d7c9a65a073caa722b99ccbd4cc91e5d4ef9"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus",
            "helm_release.prometheus_operator_crds"
          ]
        },
        {
          "index_key": "---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: monitoring",
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/monitoring/serviceaccounts/prometheus",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "e26063a121f20964c4604d9850459dd688aa9ca5d4a522220bfc349c1cacd5ad",
            "live_uid": "32936075-063c-4cab-a0df-51fbb2189c5a",
            "name": "prometheus",
            "namespace": "monitoring",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "32936075-063c-4cab-a0df-51fbb2189c5a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: monitoring",
            "yaml_body_parsed": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: prometheus\n  namespace: monitoring\n",
            "yaml_incluster": "e26063a121f20964c4604d9850459dd688aa9ca5d4a522220bfc349c1cacd5ad"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.prometheus",
            "helm_release.prometheus_operator_crds"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
